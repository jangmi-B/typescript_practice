리뷰
- static은 멤버변수가 참조가 안된다(보통 컨트롤러에는 좋지않음)
- 로컬스토리지에서 렌더 호출하는거는 맞지않음… 수정필요
- Body onload()로 로딩시켜주기
- 화살표함수
- JSON parse시에 포멧을 문자열 / 빈문자열 예외처리 필요
- 로컬/이벤트/렌더링/아이템조작.. 이런식으로 목적에 맞게 분리할 수 있음…
- 하나의 클래스에는 하나의 역할만 할수있도록 만들기..!
- 렌더는 모든게 완성됐을때 그리는 역할만 하도록 해야한다.
- 아예 validation을 함수로 만들어서 모든 체크를 거기서 하게 만들어야함
- 이미 완료된 날짜입니다… duedate로 만들어보기
- 함수이름 명확해야함


<리팩토링 내용>

enum EnumCategory {
    BUCKETLIST = "BUCKETLIST",
    STUDY = "STUDY",
    WORKOUT = "WORKOUT"
};

// Category 카테고리를 등록 받아서 그 형태로 selec box 를 갱신해준다
class Category (
    // todo
)

1. 위와 같은 형식을 사용하여 카테고리 등록을 하는 클래스와 기능을 만들어 본다

- Category에 내용을 등록/삭제 할 수 있게 (관리자 역할)

- 등록한 카테고리는 select box에 보여져야 한다


2. 클래스나 인터페이스들은 각 목적에 맞는 역할만 할 수 있도록 한다

(예)


ListTemplate 클래스 : 리스트를 그리는 역할만 한다

Category 클래스 : 카테고리를 등록/수정/삭제하는 역할만 한다

Store 클래스 : TodoItem 안의 데이터를 관리하는 역할만 한다

TodoItem 클래스 : todo를 등록하고 검증하는 역할만 한다

Todo 클래스 : TodoItem 클래스를 멤버로 가지고 있고 todo를 등록/수정/삭제하는 역할만 한다


3. 완료일(duedate)에 대해 검증 한다

- 완료일이 지난 아이템

- 완료일 보다 이전 날짜의 아이템이 등록 되려고 할 때 처리


4. 사용 TODO LIST처럼 보기 좋게 CSS를 꾸민다

- TODO LIST 화면과 TODO ITEM 입력화면과 CATEGORY 등록 화면을 별도의 html파일로 분할하고 리다이렉트 시킨다.